/*! insulate.js 2014-10-06 */
!function(a,b){function c(a){if(null===a||"object"!=typeof a)return a;var b=a.constructor();for(var d in a)a.hasOwnProperty(d)&&(b[d]=c(a[d]));return b}function d(a){f&&i.warn(a)}function e(c,e){var f;if(f="undefined"==typeof e?a:e,null!==typeof j){var g;try{j(f,c,{get:function(){return g},set:function(a){return f[c]?(d("This proprty has already been set and will not be changed"),null):void(g=a)}})}catch(h){d(h.message)}finally{return}}else d("older browser, will not be secure"),f[c]=b}var f,g={},h=/^[$A-Z_][0-9A-Z_$]*$/i,i=a.console,j=c(Object.defineProperty||null);g.createConstant=function(b,c){try{if(a[b]&&"function"!=typeof Object.getOwnPropertyDescriptor(a,b).set)throw"This variable has been decleard without insulate, please pick another name";if("string"!=typeof b)throw"First argument needs to be constant name";if(!b.match(h))throw"Name needs to be a valid javascript name";e(b),c&&(a[b]=c)}catch(f){d(f)}finally{return}},g.createObject=function(b,c){c=c||a;try{if("string"!=typeof b)throw"First argument needs to be object name";if(!b.match(h))throw"Name needs to be a valid javascript name";e(b,c),c[b]={}}catch(f){d(f)}finally{return}},g.createMethod=function(a,b,c){try{if("object"!=typeof b)throw"Second argument needs to be an object";if(c&&"function"!=typeof c)throw"Third argument needs to be a function";if("string"!=typeof a)throw"First argument needs to be Method name";if(!a.match(h))throw"Name needs to be a valid javascript name";e(a,b),c&&(b[a]=c)}catch(f){d(f)}finally{return}},g.createMember=function(a,b,c){try{if("string"!=typeof a)throw"First argument needs to be member name";if("object"!=typeof b)throw"Second argument needs to be an object";if(!a.match(h))throw"Name needs to be a valid javascript name";if("function"==typeof c)throw"Member can not be a function";e(a,b),c&&(b[a]=c)}catch(f){d(f)}finally{return}},f=!1,g.logErrors=function(){f=!0},g.muteErrors=function(){f=!1},e("insulate",a);var k=a.insulate={};e("createConstant",k),e("createObject",k),e("createMethod",k),e("createMember",k),e("logErrors",k),e("muteErrors",k);for(var l in g)g.hasOwnProperty(l)&&(k[l]=g[l])}(window);